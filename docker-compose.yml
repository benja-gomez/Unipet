version: "3.4"

services:
  database:
    container_name: UNIPET_DB
    build: 
      context: ./database
      dockerfile: Dockerfile.DB
    restart: always
    volumes:
      - ./database/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${UNIPET_DB_PASSWORD}
      POSTGRES_DB: ${UNIPET_DB_NAME}

  adminer:
    container_name: UNIPET_ADMINER
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      - ADMINER_DESIGN=pepa-linha
  minio:
    container_name: UNIPET_MINIO
    image: quay.io/minio/minio
    restart: always
    ports:
      - '9000:9000'
      - '9080:9080'
    volumes:
      - './minio_data:/data'
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9080"

  mc-service:
    container_name: UNIPET_MINIO_CLIENT
    image: minio/mc
    restart: on-failure
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 inacap inacap123;
      /usr/bin/mc mb myminio/unipet;
      /usr/bin/mc anonymous set public myminio/unipet;

      "
  whatsapp:
    container_name: UNIPET_BOT
    restart: always
    build:
      context: ./whatsappbot
      dockerfile: Dockerfile.BOT
    volumes:
      - ./whatsappbot:/bot
    ports:
      - "3030:3030"
    environment:
      - UNIPET_DB_NAME=${UNIPET_DB_NAME}
      - UNIPET_DB_PASSWORD=${UNIPET_DB_PASSWORD}
      - UNIPET_DB_HOST=${UNIPET_DB_HOST}
  app:
    container_name: UNIPET_APP
    build:
      context: ./app
      dockerfile: Dockerfile.APP
    restart: always
    ports:
      - '3000:3000'
    environment:
      - UNIPET_DB_NAME=${UNIPET_DB_NAME}
      - UNIPET_DB_PASSWORD=${UNIPET_DB_PASSWORD}
      - UNIPET_DB_HOST=${UNIPET_DB_HOST}
      - ORIGIN=${ORIGIN}

